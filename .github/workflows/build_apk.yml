# This is a basic workflow to help you get started with Actions
#app-v9-release.apk

name: BuildApk
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  #  push:
  #    branches: [ master ]


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      choice:
        type: choice
        required: true
        description: Select flavor
        options:
          - production
          - staging
          - dev
      build_description:
        description: 'description'
        required: false


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      flavor: ${{ github.event.inputs.choice }}
      APK_NAME: ""
      BUILD_DESCRIPTION: ${{ github.event.inputs.build_description }}
      TASK_NAME: ""

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: set apk name
        run: echo "APK_NAME=app-${{env.flavor}}-release.apk" >> $GITHUB_ENV
      - name: condition 1
        if: "contains(env.flavor, 'production')"
        run: echo "TASK_NAME=assembleProductionRelease" >> $GITHUB_ENV

      - name: condition 2
        if: "contains(env.flavor, 'staging')"
        run: echo "TASK_NAME=assembleStagingRelease" >> $GITHUB_ENV

      - name: condition 3
        if: "contains(env.flavor, 'dev')"
        run: echo "TASK_NAME=assembleDevRelease" >> $GITHUB_ENV

      - name: Build with Gradle
        run: ./gradlew ${{env.TASK_NAME}}

      - name: Upload ${{env.flavor}} APK
        uses: actions/upload-artifact@v2
        with:
          name: app-${{env.flavor}}-release
          path: app/build/outputs/apk/${{env.flavor}}/release/${{env.APK_NAME}}
