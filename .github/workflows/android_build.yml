# This is a basic workflow to help you get started with Actions

name: Android Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
#  push:
#    branches: [ task1 ]

  # Allows you to run this workflow manually from the Actions tab
 workflow_dispatch:
   inputs:
     build_description :
      description: 'description'
      required: false
     file_name:
       description: 'file name'
       required: false


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      TIME_NOW: "initial value for time"
      APK_NAME: "app-production-release"
      EXT : ".apk"
      BUILD_DESCRIPTION : ${{ github.event.inputs.build_description }}

    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: setting date
        run: echo "TIME_NOW=$(date +'%Y-%m-%d-%H-%M-%S')" >> $GITHUB_ENV

      - name: print date
        run: echo "time now is $TIME_NOW"

      - name : print descrioption
        run : echo "descrioption is $BUILD_DESCRIPTION"

      - name: print file name
        run: echo "file name $APK_NAME$EXT"

      - name: print commit msg
        run: echo "${{github.event.commits[0].message}}"
      - name: Logging env
        run: echo "${{toJSON(env)}}"

      - name: Logging github
        run: echo "${{toJSON(github)}}"

#      - name: Build with Gradle
#        run: ./gradlew assembleProductionRelease

#      - name: Upload to server
#        run: curl --request POST "https://apps-tech.org/log/upload/sherif/apk" --form file=@"app/build/outputs/apk/production/release/${{env.APK_NAME}}${{env.EXT}}" --form name="${{env.APK_NAME}}-${{env.TIME_NOW}}"
#
#      - name: Upload production APK
#        uses: actions/upload-artifact@v2
#        with:
#          name: ${{env.APK_NAME}}-${{env.TIME_NOW}}
#          path: app/build/outputs/apk/production/release/${{env.APK_NAME}}${{env.EXT}}


      
 


